" syntax highlighting
syntax on

set encoding=utf8

" show hybrid line numbers
set relativenumber
set number

" configure tabs
set expandtab
set smarttab
set shiftwidth=2
set softtabstop=2
set tabstop=2"

" configure splits
set splitbelow
set splitright

" configure special characters
set listchars=eol:$,tab:>-,trail:~,extends:>,precedes:<
set list

" cursor
set cursorline

" search
set hlsearch
set incsearch
set ignorecase smartcase

" folding

set foldmethod=syntax
set foldlevelstart=20

let javaScript_fold=1         " JavaScript
let perl_fold=1               " Perl
let php_folding=1             " PHP
let r_syntax_folding=1        " R
let ruby_fold=1               " Ruby
let sh_fold_enabled=1         " sh
let vimsyn_folding='af'       " Vim script
let xml_syntax_folding=1      " XML

" auto remove trailing white spaces
autocmd BufWritePre * %s/\s\+$//e

" mapping keys
let mapleader=' '
:inoremap jk <esc>

" splits

map <Leader>s :split<CR>
map <Leader>v :vsplit<CR>

if has('macunix')
  " new horizontal split: alt + shift + d = Î (mac)
  nnoremap Î :new<CR>
  " new vertical split: alt + d = ∂ (mac)
  nnoremap ∂ :vnew<CR>
endif

" tabs navigation

if has('macunix')
  " go to previous tab: alt + shift + [ = ” (mac)
  nnoremap ” :tabprevious<CR>
  " go to next tab: alt + shift + ] = ’ (mac)
  nnoremap ’ :tabnext<CR>
  " new tab: alt + t = † (mac)
  nnoremap † :tabnew<CR>

endif

" window management

if has('macunix')
  " close buffer: alt + w (mac)
  nnoremap ∑ :q<CR>
  " save (write buffer): alt + s = ß (mac)
  nnoremap ß :w<CR>
endif

" ctags
set tags=./.tags;,tags;

" mouse support
set mouse=a

" set clipboard
set clipboard+=unnamed

" bind K to grep word under cursor
nnoremap K :grep! "\b<C-R><C-W>\b"<CR>:cw<CR>

" open files in new tab
set switchbuf+=usetab,newtab

" tell vim to keep a backup file
set backup

" tell vim where to put its backup files
set backupdir=/tmp

" tell vim where to put swap files
set dir=/tmp

" load plugins
source ~/.dotfiles/vim/plugins.vim
